{
  "swagger": "2.0",
  "info": {
    "description": "Mancala API Documentation",
    "version": "1.0",
    "title": "Mancala API docs",
    "contact": {}
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "mancala-controller",
      "description": "Mancala Controller"
    }
  ],
  "paths": {
    "/mancala/end-game": {
      "post": {
        "tags": [
          "mancala-controller"
        ],
        "summary": "End the game",
        "description": "returns a game with winner details computed",
        "operationId": "endGameUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "gameDTO",
            "description": "gameDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GameDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved",
            "schema": {
              "$ref": "#/definitions/GameDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mancala/make-move": {
      "post": {
        "tags": [
          "mancala-controller"
        ],
        "summary": "Make a move in game",
        "description": "returns a new game based move made by the players",
        "operationId": "makeMoveUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "moveRequestDTO",
            "description": "request DTO consisting of information for player making the move, index on which move is being made and the initial state of the game",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MakeMoveRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved",
            "schema": {
              "$ref": "#/definitions/GameDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mancala/start-game": {
      "post": {
        "tags": [
          "mancala-controller"
        ],
        "summary": "Start a game with two players",
        "description": "returns a new game based on the GameConstants set in the backend",
        "operationId": "startGameUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "startGameRequestDTO",
            "description": "request DTO consisting of information for the two players",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartGameRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved",
            "schema": {
              "$ref": "#/definitions/GameDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "GameDTO": {
      "type": "object",
      "required": [
        "playerOne",
        "playerOneBigPit",
        "playerOneSmallPits",
        "playerTwo",
        "playerTwoBigPit",
        "playerTwoSmallPits"
      ],
      "properties": {
        "gameEnd": {
          "type": "boolean"
        },
        "nextTurn": {
          "type": "integer",
          "format": "int32",
          "example": 0,
          "description": "playerNumber corresponding to the next turn"
        },
        "playerOne": {
          "example": {
            "name": "playerOne",
            "playerNumber": 0
          },
          "description": "playerOne",
          "$ref": "#/definitions/PlayerDTO"
        },
        "playerOneBigPit": {
          "type": "integer",
          "format": "int32",
          "example": 22,
          "description": "No. of stones in playerOne BigPit"
        },
        "playerOneSmallPits": {
          "type": "array",
          "example": [
            1,
            9,
            2,
            0,
            1,
            8
          ],
          "description": "Array containing No. of stones in each of player one small pits",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "playerTwo": {
          "example": {
            "name": "playerTwo",
            "playerNumber": 1
          },
          "description": "name",
          "$ref": "#/definitions/PlayerDTO"
        },
        "playerTwoBigPit": {
          "type": "integer",
          "format": "int32",
          "example": 22,
          "description": "No. of stones in playerTwo BigPit"
        },
        "playerTwoSmallPits": {
          "type": "array",
          "example": [
            9,
            9,
            2,
            0,
            1,
            8
          ],
          "description": "Array containing No. of stones in each of player two small pits",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "tie": {
          "type": "boolean"
        },
        "winner": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "playerNumber corresponding to winner of the game"
        }
      },
      "title": "GameDTO",
      "description": "Describes the state of the game"
    },
    "MakeMoveRequestDTO": {
      "type": "object",
      "required": [
        "gameDTO",
        "pitNumber",
        "playerNumber"
      ],
      "properties": {
        "gameDTO": {
          "description": "state of the game on which the move is to be performed",
          "$ref": "#/definitions/GameDTO"
        },
        "pitNumber": {
          "type": "integer",
          "format": "int32",
          "example": 2,
          "description": "index of the pit on which the player has selected to make the move"
        },
        "playerNumber": {
          "type": "integer",
          "format": "int32",
          "example": 0,
          "description": "player number corresponding to the player making the move"
        }
      },
      "title": "MakeMoveRequestDTO",
      "description": "Describes the request to make a move in the game"
    },
    "PlayerDTO": {
      "type": "object",
      "required": [
        "name",
        "playerNumber"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "Abhilash",
          "description": "Name of the player"
        },
        "playerNumber": {
          "type": "integer",
          "format": "int32",
          "example": 0,
          "description": "number corresponding to player. 0 if playerOne, 1 if playertwo"
        }
      },
      "title": "PlayerDTO",
      "description": "Describes the player participating in a game"
    },
    "StartGameRequestDTO": {
      "type": "object",
      "required": [
        "playerOne",
        "playerTwo"
      ],
      "properties": {
        "playerOne": {
          "description": "details corresponding to player one",
          "$ref": "#/definitions/PlayerDTO"
        },
        "playerTwo": {
          "description": "details corresponding to player two",
          "$ref": "#/definitions/PlayerDTO"
        }
      },
      "title": "StartGameRequestDTO"
    }
  }
}